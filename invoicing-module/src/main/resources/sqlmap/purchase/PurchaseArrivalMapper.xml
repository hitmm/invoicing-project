<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.glacier.frame.dao.purchase.PurchaseArrivalMapper" >
  <resultMap id="BaseResultMap" type="com.glacier.frame.entity.purchase.PurchaseArrival" >
    <id column="temp_purchase_arrival_pur_arrival_id" property="purArrivalId" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_purchase_type_id" property="purchaseTypeId" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_arrival_code" property="arrivalCode" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_contract_code" property="contractCode" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_supplier_id" property="supplierId" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_fax" property="fax" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_linkman" property="linkman" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_phone" property="phone" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_supplier_add" property="supplierAdd" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_storage" property="storage" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_delivery_type" property="deliveryType" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_delivery_dead" property="deliveryDead" jdbcType="TIMESTAMP" />
    <result column="temp_purchase_arrival_payment_agr_id" property="paymentAgrId" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_delivery_add" property="deliveryAdd" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_invoice" property="invoice" jdbcType="CHAR" />
    <result column="temp_purchase_arrival_invoice_type_id" property="invoiceTypeId" jdbcType="CHAR" />
    <result column="temp_purchase_arrival_payment_type_id" property="paymentTypeId" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_log_settlement_id" property="logSettlementId" jdbcType="CHAR" />
    <result column="temp_purchase_arrival_log_code" property="logCode" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_log_total_tmount" property="logTotalTmount" jdbcType="DECIMAL" />
    <result column="temp_purchase_arrival_log_company" property="logCompany" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_log_linkman" property="logLinkman" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_log_phone" property="logPhone" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_total_amount" property="totalAmount" jdbcType="DECIMAL" />
    <result column="temp_purchase_arrival_derate_money" property="derateMoney" jdbcType="DECIMAL" />
    <result column="temp_purchase_arrival_arrival_date" property="arrivalDate" jdbcType="TIMESTAMP" />
    <result column="temp_purchase_arrival_acceptor" property="acceptor" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_accessory" property="accessory" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_not_pay_amo" property="notPayAmo" jdbcType="DECIMAL" />
    <result column="temp_purchase_arrival_alr_pay_amo" property="alrPayAmo" jdbcType="DECIMAL" />
    <result column="temp_purchase_arrival_inv_state" property="invState" jdbcType="CHAR" />
    <result column="temp_purchase_arrival_not_inv_amo" property="notInvAmo" jdbcType="DECIMAL" />
    <result column="temp_purchase_arrival_alr_inv_amo" property="alrInvAmo" jdbcType="DECIMAL" />
    <result column="temp_purchase_arrival_return_state" property="returnState" jdbcType="CHAR" />
    <result column="temp_purchase_arrival_not_return_amo" property="notReturnAmo" jdbcType="DECIMAL" />
    <result column="temp_purchase_arrival_alr_return_amo" property="alrReturnAmo" jdbcType="DECIMAL" />
    <result column="temp_purchase_arrival_pay_state" property="payState" jdbcType="CHAR" />
    <result column="temp_purchase_arrival_audit_state" property="auditState" jdbcType="CHAR" />
    <result column="temp_purchase_arrival_auditor" property="auditor" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_audit_date" property="auditDate" jdbcType="TIMESTAMP" />
    <result column="temp_purchase_arrival_audit_remark" property="auditRemark" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_enabled" property="enabled" jdbcType="CHAR" />
    <result column="temp_purchase_arrival_operators" property="operators" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_operator_dep" property="operatorDep" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_confirmor" property="confirmor" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_confirmor_department" property="confirmorDepartment" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_confirmor_time" property="confirmorTime" jdbcType="TIMESTAMP" />
    <result column="temp_purchase_arrival_tail_after_status" property="tailAfterStatus" jdbcType="CHAR" />
    <result column="temp_purchase_arrival_affirm_arrival" property="affirmArrival" jdbcType="CHAR" />
    <result column="temp_purchase_arrival_summary" property="summary" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_remark" property="remark" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_creater" property="creater" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="temp_purchase_arrival_updater" property="updater" jdbcType="VARCHAR" />
    <result column="temp_purchase_arrival_update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <!--自定义拓展字段  -->
    <result column="temp_purchase_arrival_purchase_type_display" property="purchaseTypeDisplay" jdbcType="VARCHAR"/> <!--自定义扩展字段 -->
    <result column="temp_purchase_arrival_storage_display" property="storageDisplay" jdbcType="VARCHAR"/> <!--自定义扩展字段 -->
    <result column="temp_purchase_arrival_supplier_display" property="supplierDisplay" jdbcType="VARCHAR"/> <!--自定义扩展字段 -->
    <result column="temp_purchase_arrival_operators_display" property="operatorsDisplay" jdbcType="VARCHAR"/> <!--自定义扩展字段 -->
    <result column="temp_purchase_arrival_payment_type_display" property="paymentTypeDisplay" jdbcType="VARCHAR"/> <!--自定义扩展字段 -->
    <result column="temp_purchase_arrival_delivery_type_display" property="deliveryTypeDisplay" jdbcType="VARCHAR"/> <!--自定义扩展字段 -->
    <result column="temp_purchase_arrival_log_company_display" property="logCompanyDisplay" jdbcType="VARCHAR"/> <!--自定义扩展字段 -->
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    temp_purchase_arrival.pur_arrival_id as temp_purchase_arrival_pur_arrival_id, temp_purchase_arrival.purchase_type_id as temp_purchase_arrival_purchase_type_id, 
    temp_purchase_arrival.arrival_code as temp_purchase_arrival_arrival_code, temp_purchase_arrival.contract_code as temp_purchase_arrival_contract_code, 
    temp_purchase_arrival.supplier_id as temp_purchase_arrival_supplier_id, temp_purchase_arrival.fax as temp_purchase_arrival_fax, 
    temp_purchase_arrival.linkman as temp_purchase_arrival_linkman, temp_purchase_arrival.phone as temp_purchase_arrival_phone, 
    temp_purchase_arrival.supplier_add as temp_purchase_arrival_supplier_add, temp_purchase_arrival.storage as temp_purchase_arrival_storage, 
    temp_purchase_arrival.delivery_type as temp_purchase_arrival_delivery_type, temp_purchase_arrival.delivery_dead as temp_purchase_arrival_delivery_dead, 
    temp_purchase_arrival.payment_agr_id as temp_purchase_arrival_payment_agr_id, temp_purchase_arrival.delivery_add as temp_purchase_arrival_delivery_add, 
    temp_purchase_arrival.invoice as temp_purchase_arrival_invoice, temp_purchase_arrival.invoice_type_id as temp_purchase_arrival_invoice_type_id, 
    temp_purchase_arrival.payment_type_id as temp_purchase_arrival_payment_type_id, temp_purchase_arrival.log_settlement_id as temp_purchase_arrival_log_settlement_id, 
    temp_purchase_arrival.log_code as temp_purchase_arrival_log_code, temp_purchase_arrival.log_total_tmount as temp_purchase_arrival_log_total_tmount, 
    temp_purchase_arrival.log_company as temp_purchase_arrival_log_company, temp_purchase_arrival.log_linkman as temp_purchase_arrival_log_linkman, 
    temp_purchase_arrival.log_phone as temp_purchase_arrival_log_phone, temp_purchase_arrival.total_amount as temp_purchase_arrival_total_amount, 
    temp_purchase_arrival.derate_money as temp_purchase_arrival_derate_money, temp_purchase_arrival.arrival_date as temp_purchase_arrival_arrival_date, 
    temp_purchase_arrival.acceptor as temp_purchase_arrival_acceptor, temp_purchase_arrival.accessory as temp_purchase_arrival_accessory, 
    temp_purchase_arrival.not_pay_amo as temp_purchase_arrival_not_pay_amo, temp_purchase_arrival.alr_pay_amo as temp_purchase_arrival_alr_pay_amo, 
    temp_purchase_arrival.inv_state as temp_purchase_arrival_inv_state, temp_purchase_arrival.not_inv_amo as temp_purchase_arrival_not_inv_amo, 
    temp_purchase_arrival.alr_inv_amo as temp_purchase_arrival_alr_inv_amo, temp_purchase_arrival.return_state as temp_purchase_arrival_return_state, 
    temp_purchase_arrival.not_return_amo as temp_purchase_arrival_not_return_amo, temp_purchase_arrival.alr_return_amo as temp_purchase_arrival_alr_return_amo, 
    temp_purchase_arrival.pay_state as temp_purchase_arrival_pay_state, temp_purchase_arrival.audit_state as temp_purchase_arrival_audit_state, 
    temp_purchase_arrival.auditor as temp_purchase_arrival_auditor, temp_purchase_arrival.audit_date as temp_purchase_arrival_audit_date, 
    temp_purchase_arrival.audit_remark as temp_purchase_arrival_audit_remark, temp_purchase_arrival.enabled as temp_purchase_arrival_enabled, 
    temp_purchase_arrival.operators as temp_purchase_arrival_operators, temp_purchase_arrival.operator_dep as temp_purchase_arrival_operator_dep, 
    temp_purchase_arrival.confirmor as temp_purchase_arrival_confirmor, temp_purchase_arrival.confirmor_department as temp_purchase_arrival_confirmor_department, 
    temp_purchase_arrival.confirmor_time as temp_purchase_arrival_confirmor_time, temp_purchase_arrival.tail_after_status as temp_purchase_arrival_tail_after_status, 
    temp_purchase_arrival.affirm_arrival as temp_purchase_arrival_affirm_arrival, temp_purchase_arrival.summary as temp_purchase_arrival_summary, 
    temp_purchase_arrival.remark as temp_purchase_arrival_remark, temp_purchase_arrival.creater as temp_purchase_arrival_creater, 
    temp_purchase_arrival.create_time as temp_purchase_arrival_create_time, temp_purchase_arrival.updater as temp_purchase_arrival_updater, 
    temp_purchase_arrival.update_time as temp_purchase_arrival_update_time
  	<!-- 以下字段属于扩展 -->
    ,temp_userCnName.user_cn_name as temp_purchase_arrival_operators_display
    ,temp_suppliersName.suppliers_name as temp_purchase_arrival_supplier_display
    ,temp_paymentType.payment_type_name as temp_purchase_arrival_payment_type_display
    ,temp_purchaseType.name as temp_purchase_arrival_purchase_type_display
    ,temp_warehouse.warehouse_name as temp_purchase_arrival_storage_display
    ,temp_logCompanyName.suppliers_name as temp_purchase_arrival_log_company_display
  </sql>
  <sql id="Base_extend">
     LEFT JOIN t_user temp_userCnName ON temp_userCnName.user_id = temp_purchase_arrival.operators <!-- 扩展 -->
     LEFT JOIN t_suppliers temp_suppliersName ON temp_suppliersName.supplier_id = temp_purchase_arrival.supplier_id <!-- 扩展 -->
     LEFT JOIN t_par_com_payment_type temp_paymentType ON temp_paymentType.payment_type_id = temp_purchase_arrival.payment_type_id <!-- 扩展 -->
  	 LEFT JOIN t_par_purchase_type temp_purchaseType ON temp_purchaseType.purchase_type_id = temp_purchase_arrival.purchase_type_id <!-- 扩展 -->
  	 LEFT JOIN t_warehouse temp_warehouse ON temp_warehouse.warehouse_id = temp_purchase_arrival.storage <!-- 扩展 -->
  	 LEFT JOIN t_suppliers temp_logCompanyName ON temp_logCompanyName.supplier_id = temp_purchase_arrival.log_company <!-- 扩展 -->
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.glacier.frame.entity.purchase.PurchaseArrivalExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_purchase_arrival temp_purchase_arrival
    <include refid="Base_extend" />
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_purchase_arrival temp_purchase_arrival
    <include refid="Base_extend" />
    where temp_purchase_arrival.pur_arrival_id = #{purArrivalId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_purchase_arrival
    where pur_arrival_id = #{purArrivalId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.glacier.frame.entity.purchase.PurchaseArrivalExample" >
    delete temp_purchase_arrival from t_purchase_arrival temp_purchase_arrival
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.glacier.frame.entity.purchase.PurchaseArrival" >
    insert into t_purchase_arrival (pur_arrival_id, purchase_type_id, arrival_code, 
      contract_code, supplier_id, fax, 
      linkman, phone, supplier_add, 
      storage, delivery_type, delivery_dead, 
      payment_agr_id, delivery_add, invoice, 
      invoice_type_id, payment_type_id, log_settlement_id, 
      log_code, log_total_tmount, log_company, 
      log_linkman, log_phone, total_amount, 
      derate_money, arrival_date, acceptor, 
      accessory, not_pay_amo, alr_pay_amo, 
      inv_state, not_inv_amo, alr_inv_amo, 
      return_state, not_return_amo, alr_return_amo, 
      pay_state, audit_state, auditor, 
      audit_date, audit_remark, enabled, 
      operators, operator_dep, confirmor, 
      confirmor_department, confirmor_time, tail_after_status, 
      affirm_arrival, summary, remark, creater, 
      create_time, updater, update_time
      )
    values (#{purArrivalId,jdbcType=VARCHAR}, #{purchaseTypeId,jdbcType=VARCHAR}, #{arrivalCode,jdbcType=VARCHAR}, 
      #{contractCode,jdbcType=VARCHAR}, #{supplierId,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, 
      #{linkman,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{supplierAdd,jdbcType=VARCHAR}, 
      #{storage,jdbcType=VARCHAR}, #{deliveryType,jdbcType=VARCHAR}, #{deliveryDead,jdbcType=TIMESTAMP}, 
      #{paymentAgrId,jdbcType=VARCHAR}, #{deliveryAdd,jdbcType=VARCHAR}, #{invoice,jdbcType=CHAR}, 
      #{invoiceTypeId,jdbcType=CHAR}, #{paymentTypeId,jdbcType=VARCHAR}, #{logSettlementId,jdbcType=CHAR}, 
      #{logCode,jdbcType=VARCHAR}, #{logTotalTmount,jdbcType=DECIMAL}, #{logCompany,jdbcType=VARCHAR}, 
      #{logLinkman,jdbcType=VARCHAR}, #{logPhone,jdbcType=VARCHAR}, #{totalAmount,jdbcType=DECIMAL}, 
      #{derateMoney,jdbcType=DECIMAL}, #{arrivalDate,jdbcType=TIMESTAMP}, #{acceptor,jdbcType=VARCHAR}, 
      #{accessory,jdbcType=VARCHAR}, #{notPayAmo,jdbcType=DECIMAL}, #{alrPayAmo,jdbcType=DECIMAL}, 
      #{invState,jdbcType=CHAR}, #{notInvAmo,jdbcType=DECIMAL}, #{alrInvAmo,jdbcType=DECIMAL}, 
      #{returnState,jdbcType=CHAR}, #{notReturnAmo,jdbcType=DECIMAL}, #{alrReturnAmo,jdbcType=DECIMAL}, 
      #{payState,jdbcType=CHAR}, #{auditState,jdbcType=CHAR}, #{auditor,jdbcType=VARCHAR}, 
      #{auditDate,jdbcType=TIMESTAMP}, #{auditRemark,jdbcType=VARCHAR}, #{enabled,jdbcType=CHAR}, 
      #{operators,jdbcType=VARCHAR}, #{operatorDep,jdbcType=VARCHAR}, #{confirmor,jdbcType=VARCHAR}, 
      #{confirmorDepartment,jdbcType=VARCHAR}, #{confirmorTime,jdbcType=TIMESTAMP}, #{tailAfterStatus,jdbcType=CHAR}, 
      #{affirmArrival,jdbcType=CHAR}, #{summary,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{creater,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updater,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.glacier.frame.entity.purchase.PurchaseArrival" >
    insert into t_purchase_arrival
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="purArrivalId != null" >
        pur_arrival_id,
      </if>
      <if test="purchaseTypeId != null" >
        purchase_type_id,
      </if>
      <if test="arrivalCode != null" >
        arrival_code,
      </if>
      <if test="contractCode != null" >
        contract_code,
      </if>
      <if test="supplierId != null" >
        supplier_id,
      </if>
      <if test="fax != null" >
        fax,
      </if>
      <if test="linkman != null" >
        linkman,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="supplierAdd != null" >
        supplier_add,
      </if>
      <if test="storage != null" >
        storage,
      </if>
      <if test="deliveryType != null" >
        delivery_type,
      </if>
      <if test="deliveryDead != null" >
        delivery_dead,
      </if>
      <if test="paymentAgrId != null" >
        payment_agr_id,
      </if>
      <if test="deliveryAdd != null" >
        delivery_add,
      </if>
      <if test="invoice != null" >
        invoice,
      </if>
      <if test="invoiceTypeId != null" >
        invoice_type_id,
      </if>
      <if test="paymentTypeId != null" >
        payment_type_id,
      </if>
      <if test="logSettlementId != null" >
        log_settlement_id,
      </if>
      <if test="logCode != null" >
        log_code,
      </if>
      <if test="logTotalTmount != null" >
        log_total_tmount,
      </if>
      <if test="logCompany != null" >
        log_company,
      </if>
      <if test="logLinkman != null" >
        log_linkman,
      </if>
      <if test="logPhone != null" >
        log_phone,
      </if>
      <if test="totalAmount != null" >
        total_amount,
      </if>
      <if test="derateMoney != null" >
        derate_money,
      </if>
      <if test="arrivalDate != null" >
        arrival_date,
      </if>
      <if test="acceptor != null" >
        acceptor,
      </if>
      <if test="accessory != null" >
        accessory,
      </if>
      <if test="notPayAmo != null" >
        not_pay_amo,
      </if>
      <if test="alrPayAmo != null" >
        alr_pay_amo,
      </if>
      <if test="invState != null" >
        inv_state,
      </if>
      <if test="notInvAmo != null" >
        not_inv_amo,
      </if>
      <if test="alrInvAmo != null" >
        alr_inv_amo,
      </if>
      <if test="returnState != null" >
        return_state,
      </if>
      <if test="notReturnAmo != null" >
        not_return_amo,
      </if>
      <if test="alrReturnAmo != null" >
        alr_return_amo,
      </if>
      <if test="payState != null" >
        pay_state,
      </if>
      <if test="auditState != null" >
        audit_state,
      </if>
      <if test="auditor != null" >
        auditor,
      </if>
      <if test="auditDate != null" >
        audit_date,
      </if>
      <if test="auditRemark != null" >
        audit_remark,
      </if>
      <if test="enabled != null" >
        enabled,
      </if>
      <if test="operators != null" >
        operators,
      </if>
      <if test="operatorDep != null" >
        operator_dep,
      </if>
      <if test="confirmor != null" >
        confirmor,
      </if>
      <if test="confirmorDepartment != null" >
        confirmor_department,
      </if>
      <if test="confirmorTime != null" >
        confirmor_time,
      </if>
      <if test="tailAfterStatus != null" >
        tail_after_status,
      </if>
      <if test="affirmArrival != null" >
        affirm_arrival,
      </if>
      <if test="summary != null" >
        summary,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="creater != null" >
        creater,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updater != null" >
        updater,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="purArrivalId != null" >
        #{purArrivalId,jdbcType=VARCHAR},
      </if>
      <if test="purchaseTypeId != null" >
        #{purchaseTypeId,jdbcType=VARCHAR},
      </if>
      <if test="arrivalCode != null" >
        #{arrivalCode,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null" >
        #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null" >
        #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="supplierAdd != null" >
        #{supplierAdd,jdbcType=VARCHAR},
      </if>
      <if test="storage != null" >
        #{storage,jdbcType=VARCHAR},
      </if>
      <if test="deliveryType != null" >
        #{deliveryType,jdbcType=VARCHAR},
      </if>
      <if test="deliveryDead != null" >
        #{deliveryDead,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentAgrId != null" >
        #{paymentAgrId,jdbcType=VARCHAR},
      </if>
      <if test="deliveryAdd != null" >
        #{deliveryAdd,jdbcType=VARCHAR},
      </if>
      <if test="invoice != null" >
        #{invoice,jdbcType=CHAR},
      </if>
      <if test="invoiceTypeId != null" >
        #{invoiceTypeId,jdbcType=CHAR},
      </if>
      <if test="paymentTypeId != null" >
        #{paymentTypeId,jdbcType=VARCHAR},
      </if>
      <if test="logSettlementId != null" >
        #{logSettlementId,jdbcType=CHAR},
      </if>
      <if test="logCode != null" >
        #{logCode,jdbcType=VARCHAR},
      </if>
      <if test="logTotalTmount != null" >
        #{logTotalTmount,jdbcType=DECIMAL},
      </if>
      <if test="logCompany != null" >
        #{logCompany,jdbcType=VARCHAR},
      </if>
      <if test="logLinkman != null" >
        #{logLinkman,jdbcType=VARCHAR},
      </if>
      <if test="logPhone != null" >
        #{logPhone,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null" >
        #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="derateMoney != null" >
        #{derateMoney,jdbcType=DECIMAL},
      </if>
      <if test="arrivalDate != null" >
        #{arrivalDate,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptor != null" >
        #{acceptor,jdbcType=VARCHAR},
      </if>
      <if test="accessory != null" >
        #{accessory,jdbcType=VARCHAR},
      </if>
      <if test="notPayAmo != null" >
        #{notPayAmo,jdbcType=DECIMAL},
      </if>
      <if test="alrPayAmo != null" >
        #{alrPayAmo,jdbcType=DECIMAL},
      </if>
      <if test="invState != null" >
        #{invState,jdbcType=CHAR},
      </if>
      <if test="notInvAmo != null" >
        #{notInvAmo,jdbcType=DECIMAL},
      </if>
      <if test="alrInvAmo != null" >
        #{alrInvAmo,jdbcType=DECIMAL},
      </if>
      <if test="returnState != null" >
        #{returnState,jdbcType=CHAR},
      </if>
      <if test="notReturnAmo != null" >
        #{notReturnAmo,jdbcType=DECIMAL},
      </if>
      <if test="alrReturnAmo != null" >
        #{alrReturnAmo,jdbcType=DECIMAL},
      </if>
      <if test="payState != null" >
        #{payState,jdbcType=CHAR},
      </if>
      <if test="auditState != null" >
        #{auditState,jdbcType=CHAR},
      </if>
      <if test="auditor != null" >
        #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditRemark != null" >
        #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        #{enabled,jdbcType=CHAR},
      </if>
      <if test="operators != null" >
        #{operators,jdbcType=VARCHAR},
      </if>
      <if test="operatorDep != null" >
        #{operatorDep,jdbcType=VARCHAR},
      </if>
      <if test="confirmor != null" >
        #{confirmor,jdbcType=VARCHAR},
      </if>
      <if test="confirmorDepartment != null" >
        #{confirmorDepartment,jdbcType=VARCHAR},
      </if>
      <if test="confirmorTime != null" >
        #{confirmorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tailAfterStatus != null" >
        #{tailAfterStatus,jdbcType=CHAR},
      </if>
      <if test="affirmArrival != null" >
        #{affirmArrival,jdbcType=CHAR},
      </if>
      <if test="summary != null" >
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.glacier.frame.entity.purchase.PurchaseArrivalExample" resultType="java.lang.Integer" >
    select count(*) from t_purchase_arrival temp_purchase_arrival
    <include refid="Base_extend" />
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_purchase_arrival temp_purchase_arrival
    <set >
      <if test="record.purArrivalId != null" >
        temp_purchase_arrival.pur_arrival_id = #{record.purArrivalId,jdbcType=VARCHAR},
      </if>
      <if test="record.purchaseTypeId != null" >
        temp_purchase_arrival.purchase_type_id = #{record.purchaseTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.arrivalCode != null" >
        temp_purchase_arrival.arrival_code = #{record.arrivalCode,jdbcType=VARCHAR},
      </if>
      <if test="record.contractCode != null" >
        temp_purchase_arrival.contract_code = #{record.contractCode,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierId != null" >
        temp_purchase_arrival.supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null" >
        temp_purchase_arrival.fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.linkman != null" >
        temp_purchase_arrival.linkman = #{record.linkman,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        temp_purchase_arrival.phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.supplierAdd != null" >
        temp_purchase_arrival.supplier_add = #{record.supplierAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.storage != null" >
        temp_purchase_arrival.storage = #{record.storage,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryType != null" >
        temp_purchase_arrival.delivery_type = #{record.deliveryType,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryDead != null" >
        temp_purchase_arrival.delivery_dead = #{record.deliveryDead,jdbcType=TIMESTAMP},
      </if>
      <if test="record.paymentAgrId != null" >
        temp_purchase_arrival.payment_agr_id = #{record.paymentAgrId,jdbcType=VARCHAR},
      </if>
      <if test="record.deliveryAdd != null" >
        temp_purchase_arrival.delivery_add = #{record.deliveryAdd,jdbcType=VARCHAR},
      </if>
      <if test="record.invoice != null" >
        temp_purchase_arrival.invoice = #{record.invoice,jdbcType=CHAR},
      </if>
      <if test="record.invoiceTypeId != null" >
        temp_purchase_arrival.invoice_type_id = #{record.invoiceTypeId,jdbcType=CHAR},
      </if>
      <if test="record.paymentTypeId != null" >
        temp_purchase_arrival.payment_type_id = #{record.paymentTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.logSettlementId != null" >
        temp_purchase_arrival.log_settlement_id = #{record.logSettlementId,jdbcType=CHAR},
      </if>
      <if test="record.logCode != null" >
        temp_purchase_arrival.log_code = #{record.logCode,jdbcType=VARCHAR},
      </if>
      <if test="record.logTotalTmount != null" >
        temp_purchase_arrival.log_total_tmount = #{record.logTotalTmount,jdbcType=DECIMAL},
      </if>
      <if test="record.logCompany != null" >
        temp_purchase_arrival.log_company = #{record.logCompany,jdbcType=VARCHAR},
      </if>
      <if test="record.logLinkman != null" >
        temp_purchase_arrival.log_linkman = #{record.logLinkman,jdbcType=VARCHAR},
      </if>
      <if test="record.logPhone != null" >
        temp_purchase_arrival.log_phone = #{record.logPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.totalAmount != null" >
        temp_purchase_arrival.total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.derateMoney != null" >
        temp_purchase_arrival.derate_money = #{record.derateMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.arrivalDate != null" >
        temp_purchase_arrival.arrival_date = #{record.arrivalDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.acceptor != null" >
        temp_purchase_arrival.acceptor = #{record.acceptor,jdbcType=VARCHAR},
      </if>
      <if test="record.accessory != null" >
        temp_purchase_arrival.accessory = #{record.accessory,jdbcType=VARCHAR},
      </if>
      <if test="record.notPayAmo != null" >
        temp_purchase_arrival.not_pay_amo = #{record.notPayAmo,jdbcType=DECIMAL},
      </if>
      <if test="record.alrPayAmo != null" >
        temp_purchase_arrival.alr_pay_amo = #{record.alrPayAmo,jdbcType=DECIMAL},
      </if>
      <if test="record.invState != null" >
        temp_purchase_arrival.inv_state = #{record.invState,jdbcType=CHAR},
      </if>
      <if test="record.notInvAmo != null" >
        temp_purchase_arrival.not_inv_amo = #{record.notInvAmo,jdbcType=DECIMAL},
      </if>
      <if test="record.alrInvAmo != null" >
        temp_purchase_arrival.alr_inv_amo = #{record.alrInvAmo,jdbcType=DECIMAL},
      </if>
      <if test="record.returnState != null" >
        temp_purchase_arrival.return_state = #{record.returnState,jdbcType=CHAR},
      </if>
      <if test="record.notReturnAmo != null" >
        temp_purchase_arrival.not_return_amo = #{record.notReturnAmo,jdbcType=DECIMAL},
      </if>
      <if test="record.alrReturnAmo != null" >
        temp_purchase_arrival.alr_return_amo = #{record.alrReturnAmo,jdbcType=DECIMAL},
      </if>
      <if test="record.payState != null" >
        temp_purchase_arrival.pay_state = #{record.payState,jdbcType=CHAR},
      </if>
      <if test="record.auditState != null" >
        temp_purchase_arrival.audit_state = #{record.auditState,jdbcType=CHAR},
      </if>
      <if test="record.auditor != null" >
        temp_purchase_arrival.auditor = #{record.auditor,jdbcType=VARCHAR},
      </if>
      <if test="record.auditDate != null" >
        temp_purchase_arrival.audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.auditRemark != null" >
        temp_purchase_arrival.audit_remark = #{record.auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.enabled != null" >
        temp_purchase_arrival.enabled = #{record.enabled,jdbcType=CHAR},
      </if>
      <if test="record.operators != null" >
        temp_purchase_arrival.operators = #{record.operators,jdbcType=VARCHAR},
      </if>
      <if test="record.operatorDep != null" >
        temp_purchase_arrival.operator_dep = #{record.operatorDep,jdbcType=VARCHAR},
      </if>
      <if test="record.confirmor != null" >
        temp_purchase_arrival.confirmor = #{record.confirmor,jdbcType=VARCHAR},
      </if>
      <if test="record.confirmorDepartment != null" >
        temp_purchase_arrival.confirmor_department = #{record.confirmorDepartment,jdbcType=VARCHAR},
      </if>
      <if test="record.confirmorTime != null" >
        temp_purchase_arrival.confirmor_time = #{record.confirmorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tailAfterStatus != null" >
        temp_purchase_arrival.tail_after_status = #{record.tailAfterStatus,jdbcType=CHAR},
      </if>
      <if test="record.affirmArrival != null" >
        temp_purchase_arrival.affirm_arrival = #{record.affirmArrival,jdbcType=CHAR},
      </if>
      <if test="record.summary != null" >
        temp_purchase_arrival.summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        temp_purchase_arrival.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.creater != null" >
        temp_purchase_arrival.creater = #{record.creater,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        temp_purchase_arrival.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updater != null" >
        temp_purchase_arrival.updater = #{record.updater,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        temp_purchase_arrival.update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_purchase_arrival temp_purchase_arrival
    set temp_purchase_arrival.pur_arrival_id = #{record.purArrivalId,jdbcType=VARCHAR},
      temp_purchase_arrival.purchase_type_id = #{record.purchaseTypeId,jdbcType=VARCHAR},
      temp_purchase_arrival.arrival_code = #{record.arrivalCode,jdbcType=VARCHAR},
      temp_purchase_arrival.contract_code = #{record.contractCode,jdbcType=VARCHAR},
      temp_purchase_arrival.supplier_id = #{record.supplierId,jdbcType=VARCHAR},
      temp_purchase_arrival.fax = #{record.fax,jdbcType=VARCHAR},
      temp_purchase_arrival.linkman = #{record.linkman,jdbcType=VARCHAR},
      temp_purchase_arrival.phone = #{record.phone,jdbcType=VARCHAR},
      temp_purchase_arrival.supplier_add = #{record.supplierAdd,jdbcType=VARCHAR},
      temp_purchase_arrival.storage = #{record.storage,jdbcType=VARCHAR},
      temp_purchase_arrival.delivery_type = #{record.deliveryType,jdbcType=VARCHAR},
      temp_purchase_arrival.delivery_dead = #{record.deliveryDead,jdbcType=TIMESTAMP},
      temp_purchase_arrival.payment_agr_id = #{record.paymentAgrId,jdbcType=VARCHAR},
      temp_purchase_arrival.delivery_add = #{record.deliveryAdd,jdbcType=VARCHAR},
      temp_purchase_arrival.invoice = #{record.invoice,jdbcType=CHAR},
      temp_purchase_arrival.invoice_type_id = #{record.invoiceTypeId,jdbcType=CHAR},
      temp_purchase_arrival.payment_type_id = #{record.paymentTypeId,jdbcType=VARCHAR},
      temp_purchase_arrival.log_settlement_id = #{record.logSettlementId,jdbcType=CHAR},
      temp_purchase_arrival.log_code = #{record.logCode,jdbcType=VARCHAR},
      temp_purchase_arrival.log_total_tmount = #{record.logTotalTmount,jdbcType=DECIMAL},
      temp_purchase_arrival.log_company = #{record.logCompany,jdbcType=VARCHAR},
      temp_purchase_arrival.log_linkman = #{record.logLinkman,jdbcType=VARCHAR},
      temp_purchase_arrival.log_phone = #{record.logPhone,jdbcType=VARCHAR},
      temp_purchase_arrival.total_amount = #{record.totalAmount,jdbcType=DECIMAL},
      temp_purchase_arrival.derate_money = #{record.derateMoney,jdbcType=DECIMAL},
      temp_purchase_arrival.arrival_date = #{record.arrivalDate,jdbcType=TIMESTAMP},
      temp_purchase_arrival.acceptor = #{record.acceptor,jdbcType=VARCHAR},
      temp_purchase_arrival.accessory = #{record.accessory,jdbcType=VARCHAR},
      temp_purchase_arrival.not_pay_amo = #{record.notPayAmo,jdbcType=DECIMAL},
      temp_purchase_arrival.alr_pay_amo = #{record.alrPayAmo,jdbcType=DECIMAL},
      temp_purchase_arrival.inv_state = #{record.invState,jdbcType=CHAR},
      temp_purchase_arrival.not_inv_amo = #{record.notInvAmo,jdbcType=DECIMAL},
      temp_purchase_arrival.alr_inv_amo = #{record.alrInvAmo,jdbcType=DECIMAL},
      temp_purchase_arrival.return_state = #{record.returnState,jdbcType=CHAR},
      temp_purchase_arrival.not_return_amo = #{record.notReturnAmo,jdbcType=DECIMAL},
      temp_purchase_arrival.alr_return_amo = #{record.alrReturnAmo,jdbcType=DECIMAL},
      temp_purchase_arrival.pay_state = #{record.payState,jdbcType=CHAR},
      temp_purchase_arrival.audit_state = #{record.auditState,jdbcType=CHAR},
      temp_purchase_arrival.auditor = #{record.auditor,jdbcType=VARCHAR},
      temp_purchase_arrival.audit_date = #{record.auditDate,jdbcType=TIMESTAMP},
      temp_purchase_arrival.audit_remark = #{record.auditRemark,jdbcType=VARCHAR},
      temp_purchase_arrival.enabled = #{record.enabled,jdbcType=CHAR},
      temp_purchase_arrival.operators = #{record.operators,jdbcType=VARCHAR},
      temp_purchase_arrival.operator_dep = #{record.operatorDep,jdbcType=VARCHAR},
      temp_purchase_arrival.confirmor = #{record.confirmor,jdbcType=VARCHAR},
      temp_purchase_arrival.confirmor_department = #{record.confirmorDepartment,jdbcType=VARCHAR},
      temp_purchase_arrival.confirmor_time = #{record.confirmorTime,jdbcType=TIMESTAMP},
      temp_purchase_arrival.tail_after_status = #{record.tailAfterStatus,jdbcType=CHAR},
      temp_purchase_arrival.affirm_arrival = #{record.affirmArrival,jdbcType=CHAR},
      temp_purchase_arrival.summary = #{record.summary,jdbcType=VARCHAR},
      temp_purchase_arrival.remark = #{record.remark,jdbcType=VARCHAR},
      temp_purchase_arrival.creater = #{record.creater,jdbcType=VARCHAR},
      temp_purchase_arrival.create_time = #{record.createTime,jdbcType=TIMESTAMP},
      temp_purchase_arrival.updater = #{record.updater,jdbcType=VARCHAR},
      temp_purchase_arrival.update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.glacier.frame.entity.purchase.PurchaseArrival" >
    update t_purchase_arrival
    <set >
      <if test="purchaseTypeId != null" >
        purchase_type_id = #{purchaseTypeId,jdbcType=VARCHAR},
      </if>
      <if test="arrivalCode != null" >
        arrival_code = #{arrivalCode,jdbcType=VARCHAR},
      </if>
      <if test="contractCode != null" >
        contract_code = #{contractCode,jdbcType=VARCHAR},
      </if>
      <if test="supplierId != null" >
        supplier_id = #{supplierId,jdbcType=VARCHAR},
      </if>
      <if test="fax != null" >
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="linkman != null" >
        linkman = #{linkman,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="supplierAdd != null" >
        supplier_add = #{supplierAdd,jdbcType=VARCHAR},
      </if>
      <if test="storage != null" >
        storage = #{storage,jdbcType=VARCHAR},
      </if>
      <if test="deliveryType != null" >
        delivery_type = #{deliveryType,jdbcType=VARCHAR},
      </if>
      <if test="deliveryDead != null" >
        delivery_dead = #{deliveryDead,jdbcType=TIMESTAMP},
      </if>
      <if test="paymentAgrId != null" >
        payment_agr_id = #{paymentAgrId,jdbcType=VARCHAR},
      </if>
      <if test="deliveryAdd != null" >
        delivery_add = #{deliveryAdd,jdbcType=VARCHAR},
      </if>
      <if test="invoice != null" >
        invoice = #{invoice,jdbcType=CHAR},
      </if>
      <if test="invoiceTypeId != null" >
        invoice_type_id = #{invoiceTypeId,jdbcType=CHAR},
      </if>
      <if test="paymentTypeId != null" >
        payment_type_id = #{paymentTypeId,jdbcType=VARCHAR},
      </if>
      <if test="logSettlementId != null" >
        log_settlement_id = #{logSettlementId,jdbcType=CHAR},
      </if>
      <if test="logCode != null" >
        log_code = #{logCode,jdbcType=VARCHAR},
      </if>
      <if test="logTotalTmount != null" >
        log_total_tmount = #{logTotalTmount,jdbcType=DECIMAL},
      </if>
      <if test="logCompany != null" >
        log_company = #{logCompany,jdbcType=VARCHAR},
      </if>
      <if test="logLinkman != null" >
        log_linkman = #{logLinkman,jdbcType=VARCHAR},
      </if>
      <if test="logPhone != null" >
        log_phone = #{logPhone,jdbcType=VARCHAR},
      </if>
      <if test="totalAmount != null" >
        total_amount = #{totalAmount,jdbcType=DECIMAL},
      </if>
      <if test="derateMoney != null" >
        derate_money = #{derateMoney,jdbcType=DECIMAL},
      </if>
      <if test="arrivalDate != null" >
        arrival_date = #{arrivalDate,jdbcType=TIMESTAMP},
      </if>
      <if test="acceptor != null" >
        acceptor = #{acceptor,jdbcType=VARCHAR},
      </if>
      <if test="accessory != null" >
        accessory = #{accessory,jdbcType=VARCHAR},
      </if>
      <if test="notPayAmo != null" >
        not_pay_amo = #{notPayAmo,jdbcType=DECIMAL},
      </if>
      <if test="alrPayAmo != null" >
        alr_pay_amo = #{alrPayAmo,jdbcType=DECIMAL},
      </if>
      <if test="invState != null" >
        inv_state = #{invState,jdbcType=CHAR},
      </if>
      <if test="notInvAmo != null" >
        not_inv_amo = #{notInvAmo,jdbcType=DECIMAL},
      </if>
      <if test="alrInvAmo != null" >
        alr_inv_amo = #{alrInvAmo,jdbcType=DECIMAL},
      </if>
      <if test="returnState != null" >
        return_state = #{returnState,jdbcType=CHAR},
      </if>
      <if test="notReturnAmo != null" >
        not_return_amo = #{notReturnAmo,jdbcType=DECIMAL},
      </if>
      <if test="alrReturnAmo != null" >
        alr_return_amo = #{alrReturnAmo,jdbcType=DECIMAL},
      </if>
      <if test="payState != null" >
        pay_state = #{payState,jdbcType=CHAR},
      </if>
      <if test="auditState != null" >
        audit_state = #{auditState,jdbcType=CHAR},
      </if>
      <if test="auditor != null" >
        auditor = #{auditor,jdbcType=VARCHAR},
      </if>
      <if test="auditDate != null" >
        audit_date = #{auditDate,jdbcType=TIMESTAMP},
      </if>
      <if test="auditRemark != null" >
        audit_remark = #{auditRemark,jdbcType=VARCHAR},
      </if>
      <if test="enabled != null" >
        enabled = #{enabled,jdbcType=CHAR},
      </if>
      <if test="operators != null" >
        operators = #{operators,jdbcType=VARCHAR},
      </if>
      <if test="operatorDep != null" >
        operator_dep = #{operatorDep,jdbcType=VARCHAR},
      </if>
      <if test="confirmor != null" >
        confirmor = #{confirmor,jdbcType=VARCHAR},
      </if>
      <if test="confirmorDepartment != null" >
        confirmor_department = #{confirmorDepartment,jdbcType=VARCHAR},
      </if>
      <if test="confirmorTime != null" >
        confirmor_time = #{confirmorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tailAfterStatus != null" >
        tail_after_status = #{tailAfterStatus,jdbcType=CHAR},
      </if>
      <if test="affirmArrival != null" >
        affirm_arrival = #{affirmArrival,jdbcType=CHAR},
      </if>
      <if test="summary != null" >
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creater != null" >
        creater = #{creater,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updater != null" >
        updater = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where pur_arrival_id = #{purArrivalId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.glacier.frame.entity.purchase.PurchaseArrival" >
    update t_purchase_arrival
    set purchase_type_id = #{purchaseTypeId,jdbcType=VARCHAR},
      arrival_code = #{arrivalCode,jdbcType=VARCHAR},
      contract_code = #{contractCode,jdbcType=VARCHAR},
      supplier_id = #{supplierId,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      linkman = #{linkman,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      supplier_add = #{supplierAdd,jdbcType=VARCHAR},
      storage = #{storage,jdbcType=VARCHAR},
      delivery_type = #{deliveryType,jdbcType=VARCHAR},
      delivery_dead = #{deliveryDead,jdbcType=TIMESTAMP},
      payment_agr_id = #{paymentAgrId,jdbcType=VARCHAR},
      delivery_add = #{deliveryAdd,jdbcType=VARCHAR},
      invoice = #{invoice,jdbcType=CHAR},
      invoice_type_id = #{invoiceTypeId,jdbcType=CHAR},
      payment_type_id = #{paymentTypeId,jdbcType=VARCHAR},
      log_settlement_id = #{logSettlementId,jdbcType=CHAR},
      log_code = #{logCode,jdbcType=VARCHAR},
      log_total_tmount = #{logTotalTmount,jdbcType=DECIMAL},
      log_company = #{logCompany,jdbcType=VARCHAR},
      log_linkman = #{logLinkman,jdbcType=VARCHAR},
      log_phone = #{logPhone,jdbcType=VARCHAR},
      total_amount = #{totalAmount,jdbcType=DECIMAL},
      derate_money = #{derateMoney,jdbcType=DECIMAL},
      arrival_date = #{arrivalDate,jdbcType=TIMESTAMP},
      acceptor = #{acceptor,jdbcType=VARCHAR},
      accessory = #{accessory,jdbcType=VARCHAR},
      not_pay_amo = #{notPayAmo,jdbcType=DECIMAL},
      alr_pay_amo = #{alrPayAmo,jdbcType=DECIMAL},
      inv_state = #{invState,jdbcType=CHAR},
      not_inv_amo = #{notInvAmo,jdbcType=DECIMAL},
      alr_inv_amo = #{alrInvAmo,jdbcType=DECIMAL},
      return_state = #{returnState,jdbcType=CHAR},
      not_return_amo = #{notReturnAmo,jdbcType=DECIMAL},
      alr_return_amo = #{alrReturnAmo,jdbcType=DECIMAL},
      pay_state = #{payState,jdbcType=CHAR},
      audit_state = #{auditState,jdbcType=CHAR},
      auditor = #{auditor,jdbcType=VARCHAR},
      audit_date = #{auditDate,jdbcType=TIMESTAMP},
      audit_remark = #{auditRemark,jdbcType=VARCHAR},
      enabled = #{enabled,jdbcType=CHAR},
      operators = #{operators,jdbcType=VARCHAR},
      operator_dep = #{operatorDep,jdbcType=VARCHAR},
      confirmor = #{confirmor,jdbcType=VARCHAR},
      confirmor_department = #{confirmorDepartment,jdbcType=VARCHAR},
      confirmor_time = #{confirmorTime,jdbcType=TIMESTAMP},
      tail_after_status = #{tailAfterStatus,jdbcType=CHAR},
      affirm_arrival = #{affirmArrival,jdbcType=CHAR},
      summary = #{summary,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      creater = #{creater,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater = #{updater,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where pur_arrival_id = #{purArrivalId,jdbcType=VARCHAR}
  </update>
</mapper>